<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Cerberus;component/Resources/Backgrounds/Plain.xaml" />
        <ResourceDictionary Source="/Cerberus;component/Resources/Skins/Default.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="BrushP1" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="BrushP2" Color="#FFF0F2F7"/>
    <SolidColorBrush x:Key="BrushP2.2" Color="#FFC8CEE2"/>
    <SolidColorBrush x:Key="BrushP3" Color="#FFBABECC"/>
    <SolidColorBrush x:Key="BrushP4" Color="#FF9A9EB0"/>
    <SolidColorBrush x:Key="BrushP5" Color="#FFE4E7F1"/>
    <SolidColorBrush x:Key="BrushP7" Color="#FFBAC1DA"/>
    <SolidColorBrush x:Key="BrushP8" Color="#FF8D98BE"/>
    <SolidColorBrush x:Key="BrushP9" Color="#FF6875A3"/>
    <SolidColorBrush x:Key="BrushP10" Color="#FF2F3D6E"/>
    <SolidColorBrush x:Key="BrushP10A" Color="#FF101C49"/>
    <SolidColorBrush x:Key="BrushP11" Color="#FF000000"/>
    <SolidColorBrush x:Key="BrushP12" Color="#FFEEE5BA"/>
    <SolidColorBrush x:Key="BrushP13" Color="#FFFFF1AB"/>
    <SolidColorBrush x:Key="BrushRed" Color="#FFED1C27"/>
    <SolidColorBrush x:Key="BrushDarkRed" Color="#FFAD1C27"/>
    <SolidColorBrush x:Key="BrushYellow" Color="#FFFFE506"/>
    <SolidColorBrush x:Key="BrushGreen" Color="#FF00AE59"/>
    <SolidColorBrush x:Key="BrushOrange" Color="#FFFF8D00"/>
    <SolidColorBrush x:Key="BrushBrightYellow" Color="#FFFFFF06"/>

    <DataTemplate DataType="{x:Type ContentControl}" x:Key="NotificationWindowDataTemplate">
        <Border Name="notifyWindowBorder" BorderBrush="#3B73B9" Background="WhiteSmoke" BorderThickness="1" CornerRadius="10" Margin="1">
            <Grid>
                <StackPanel Orientation="Horizontal">
                    <Image Height="30" Width="30" Source="{Binding Icon}" Margin="10,0,0,0"/>
                    <TextBlock FontSize="13" Text="{Binding Message}" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,10,0"/>
                </StackPanel>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Border.Loaded" SourceName="notifyWindowBorder">
                <BeginStoryboard x:Name="notifyPopUpAnimationStoryBoard">
                    <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                        <DoubleAnimation Storyboard.TargetName="notifyWindowBorder" 
                                                           Storyboard.TargetProperty="Opacity" 
                                                           From="1" To="0"
                                                           Duration="0:0:1" >
                            <DoubleAnimation.EasingFunction>
                                <ExponentialEase EasingMode="EaseInOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Border.MouseEnter" SourceName="notifyWindowBorder">
                <SeekStoryboard BeginStoryboardName="notifyPopUpAnimationStoryBoard"/>
                <PauseStoryboard BeginStoryboardName="notifyPopUpAnimationStoryBoard"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Border.MouseLeave" SourceName="notifyWindowBorder">
                <ResumeStoryboard BeginStoryboardName="notifyPopUpAnimationStoryBoard"/>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style TargetType="DataGridColumnHeader" x:Key="CustomDataGridColumnHeaderStyle">
        <Setter Property="Foreground" Value="#0C1725" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="GE Inspira"/>
        <Setter Property="Height" Value="28" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SeparatorBrush" Value="DarkGray" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FF448DCA"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[3].Color" To="#7FFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" To="#CCFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#F2FFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Fill).Color" To="#FF448DCA"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color" To="#D8FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color" To="#C6FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color" To="#8CFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Fill).(GradientStops)[3].Color" To="#3FFFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-.9"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Fill="#FF1F3B53" Grid.ColumnSpan="2" />
                        <Rectangle x:Name="BackgroundGradient" Stretch="Fill" Grid.ColumnSpan="2" >
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                    <GradientStop Color="LightGray" Offset="0.015" />
                                    <GradientStop Color="LightGray" Offset="0.375" />
                                    <GradientStop Color="LightGray" Offset="0.6" />
                                    <GradientStop Color="DarkGray" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Content="{TemplateBinding Content}"/>

                            <Path Grid.Column="1" Name="SortIcon" Fill="#FF444444" RenderTransformOrigin=".5,.5" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" Stretch="Uniform" Width="8" Margin="4,0,0,0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX=".9" ScaleY=".9" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <Rectangle Name="VerticalSeparator" 
                                       Grid.Column="1" Width="1" VerticalAlignment="Stretch" 
                                       Fill="{TemplateBinding SeparatorBrush}" 
                                       Visibility="{TemplateBinding SeparatorVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomDataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="Background" Value="AliceBlue"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasNotifications, Mode=TwoWay}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="WarningBeginStoryboard">
                        <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                            <ColorAnimationUsingKeyFrames 
                                    Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="00:00:02" Value="OrangeRed" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="WarningBeginStoryboard"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell" x:Key="CustomDataGridCellStyle" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#0C1725"/>
        <Setter Property="FontFamily" Value="GE Inspira"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid x:Name="Root" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualState x:Name="Regular"/>
                                <VisualState x:Name="Current">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="Invalid">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InvalidVisualElement"/>
                                        <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(Fill).Color" Storyboard.TargetName="FocusVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="FocusVisual" Fill="#66FFFFFF" IsHitTestVisible="false" Opacity="0" Stroke="#7F6DBDD1" StrokeThickness="1" VerticalAlignment="Bottom" Height="1"/>
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="InvalidVisualElement" HorizontalAlignment="Stretch" IsHitTestVisible="False" Opacity="0" Stroke="#FFDC000C" StrokeThickness="1" VerticalAlignment="Stretch"/>
                        <Rectangle x:Name="RightGridLine" Grid.Column="1" VerticalAlignment="Stretch" Width="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#333333" />
        <Setter Property="MaxLength" Value="40" />
        <Setter Property="Width" Value="392" />
        <Setter Property="FontFamily" Value="GE Inspira"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="ToolTip.Background"  Value="Red" />
                <Setter Property="ToolTip.Foreground"  Value="White" />
                <Setter Property="ToolTip.Margin"  Value="5,0,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomTextBoxTextStyle"  TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#333333" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,2,40,2" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true">
                        <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            <TextBlock Text="!" VerticalAlignment="center" 
                                           HorizontalAlignment="center" FontWeight="Bold" Foreground="white"/>
                        </Border>
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                            <Border BorderBrush="red" BorderThickness="1" />
                        </AdornedElementPlaceholder>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmoothScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                            <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Margin="0,-1,-1,-1" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18" Style="{StaticResource SmootherVScrollBarStyle}"/>
                            <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Margin="-1,0,-1,-1" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource SmootherHScrollBarStyle}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>